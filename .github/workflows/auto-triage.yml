name: ü§ñ Auto Triage Issues

on:
  issues:
    types: [opened, edited]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Auto-label based on title
        uses: actions/github-script@v7
        with:
          # WICHTIG: Verwende deinen TRIAGE_TOKEN statt GITHUB_TOKEN
          github-token: ${{ secrets.TRIAGE_TOKEN }}
          script: |
            try {
              const issue = context.payload.issue;
              const title = issue.title.toLowerCase();
              const body = issue.body ? issue.body.toLowerCase() : '';
              const labels = [];
              
              console.log(`Processing issue #${issue.number}: ${issue.title}`);
              
              // Add type labels based on title prefix
              if (title.includes('[bug]')) {
                labels.push('bug');
              } else if (title.includes('[feature]')) {
                labels.push('enhancement');
              } else if (title.includes('[docs]')) {
                labels.push('documentation');
              } else if (title.includes('[security]')) {
                labels.push('security');
              }
              
              // Add priority based on keywords
              if (title.includes('critical') || title.includes('urgent') || body.includes('critical')) {
                labels.push('P0: Critical');
              } else if (title.includes('high priority') || body.includes('high priority')) {
                labels.push('P1: High');
              } else if (title.includes('medium priority')) {
                labels.push('P2: Medium');
              }
              
              // Add needs-triage if no priority set
              if (!labels.some(l => l.startsWith('P'))) {
                labels.push('needs-triage');
              }
              
              // Only add labels if we have some to add
              if (labels.length > 0) {
                console.log(`Adding labels: ${labels.join(', ')}`);
                
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: labels
                });
                
                console.log('‚úÖ Labels added successfully');
              } else {
                console.log('No labels to add based on title/body');
              }
            } catch (error) {
              console.error('‚ùå Error adding labels:', error.message);
              core.setFailed(error.message);
            }

      - name: Auto-assign based on labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TRIAGE_TOKEN }}
          script: |
            try {
              const issue = context.payload.issue;
              
              // Get the current labels
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number
              });
              
              const labelNames = labels.map(l => l.name);
              console.log(`Current labels: ${labelNames.join(', ')}`);
              
              // Auto-assign logic
              // WICHTIG: Ersetze diese mit echten GitHub Usernamen aus deinem Team!
              const assignments = {
                'security': ['security-lead'],      // Ersetze mit echtem Username
                'P0: Critical': ['team-lead'],      // Ersetze mit echtem Username  
                'bug': ['dev-lead'],                // Ersetze mit echtem Username
                'documentation': ['docs-lead']      // Ersetze mit echtem Username
              };
              
              for (const [label, assignees] of Object.entries(assignments)) {
                if (labelNames.includes(label)) {
                  console.log(`Found label '${label}', would assign to: ${assignees.join(', ')}`);
                  
                  // UNCOMMENT diese Zeilen wenn du echte Usernamen eingetragen hast:
                  /*
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    assignees: assignees
                  });
                  console.log('‚úÖ Assignees added');
                  */
                  break; // Nur erste Zuweisung
                }
              }
            } catch (error) {
              console.error('‚ö†Ô∏è Error in auto-assign:', error.message);
              // Don't fail the workflow
            }

      - name: Comment on new issues
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TRIAGE_TOKEN }}
          script: |
            try {
              const issueNumber = context.payload.issue.number;
              console.log(`Creating welcome comment for issue #${issueNumber}`);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `## üëã Welcome!
                
                Thanks for creating this issue #${issueNumber}! 
                
                ### üîÑ Automated Triage Process
                
                Our automated system has:
                - ‚úÖ Analyzed your issue
                - üè∑Ô∏è Applied relevant labels
                - üìä Set initial priority
                
                ### ‚è±Ô∏è Response Times
                
                | Priority | First Response | Resolution Target |
                |----------|---------------|-------------------|
                | üî¥ P0: Critical | < 1 hour | < 24 hours |
                | üü† P1: High | < 4 hours | < 3 days |
                | üü° P2: Medium | < 24 hours | < 1 week |
                | üü¢ P3: Low | < 72 hours | Best effort |
                
                ### üìã Next Steps
                
                1. A team member will review your issue
                2. Additional labels or milestones may be added
                3. You'll be notified of any updates
                
                ### üí° Tips
                - Add more details if needed
                - Check for similar issues
                - Follow our [Contributing Guidelines](../blob/main/CONTRIBUTING.md)
                
                _This is an automated message powered by GitHub Actions with TRIAGE_TOKEN_ ü§ñ`
              });
              
              console.log('‚úÖ Comment added successfully');
            } catch (error) {
              console.error('‚ùå Error creating comment:', error.message);
              core.setFailed(error.message);
            }
